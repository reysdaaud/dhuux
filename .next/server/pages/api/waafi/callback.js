"use strict";(()=>{var e={};e.id=315;e.ids=[315];e.modules={8732:e=>{e.exports=require("react/jsx-runtime")},19121:e=>{e.exports=require("next/dist/server/app-render/action-async-storage.external.js")},29294:e=>{e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},40361:e=>{e.exports=require("next/dist/compiled/next-server/pages.runtime.prod.js")},41641:(e,r,t)=>{t.a(e,async(e,o)=>{try{t.r(r);t.d(r,{"default":()=>i});var s=t(44337);var a=t(89523);var n=e([s,a]);[s,a]=n.then?(await n)():n;const l=e=>{console.log("Waafi callback received. TODO: Implement proper verification based on Waafi's documentation.");return true};async function i(e,r){console.log(`[API /api/waafi/callback] Received request. Method: ${e.method}`);if(e.method!=="POST"){r.setHeader("Allow","POST");console.warn(`[API /api/waafi/callback] Method Not Allowed: Received ${e.method}, expected POST.`);return r.status(405).end("Method Not Allowed")}console.log("[API /api/waafi/callback] Request Body:",e.body);console.log("[API /api/waafi/callback] Request Headers:",e.headers);if(!l(e)){console.error("[API /api/waafi/callback] Callback verification failed.");return r.status(403).json({success:false,message:"Callback verification failed."})}try{const{status:t,transactionId:o,amountPaid:n,currency:i,msisdn:l,customReference:c}=e.body;if(!c){console.error("[API /api/waafi/callback] Waafi callback missing 'customReference' (our metadata).");return r.status(400).json({success:false,message:"Callback data incomplete (missing customReference)."})}let u;try{u=JSON.parse(c)}catch(e){console.error("[API /api/waafi/callback] Error parsing customReference from Waafi callback:",e,"Raw customReference:",c);return r.status(400).json({success:false,message:"Invalid customReference format."})}const{userId:d,coins:f,originalAmountKES:p,packageName:g,internalTxId:m}=u;if(!d||!f||!m){console.error("[API /api/waafi/callback] Waafi callback missing critical metadata: userId, coins, or internalTxId.");return r.status(400).json({success:false,message:"Callback metadata incomplete."})}if(o&&o!==m){console.warn(`[API /api/waafi/callback] Waafi callback transactionId (${o}) does not match internalTxId (${m}). Proceeding, but investigate.`)}if(t&&t.toUpperCase()==="SUCCESS"){const c=(0,s.doc)(a.db,"users",d);const u=await (0,s.getDoc)(c);const h={method:"waafi",amount:p,coins:f,timestamp:(0,s.serverTimestamp)(),reference:m,gatewayTransactionId:e.body.waafiTransactionId||o||"N/A",status:"success",packageName:g,currency:"KES",gatewayResponseSummary:{waafiStatus:t,waafiAmountPaid:n,waafiCurrency:i,waafiMsisdn:l}};if(u.exists()){const e=u.data().coins||0;await (0,s.updateDoc)(c,{coins:e+f,paymentHistory:(0,s.arrayUnion)(h),updatedAt:(0,s.serverTimestamp)()})}else{console.warn(`[API /api/waafi/callback] User document for ${d} not found. Creating one for Waafi payment.`);await (0,s.setDoc)(c,{uid:d,email:`waafi_user_${d}@example.com`,name:`Waafi User ${d}`,photoURL:null,firstName:"",lastName:"",country:"",mobile:l||"",profileComplete:false,preferredCategories:[],isAdmin:false,coins:f,paymentHistory:(0,s.arrayUnion)(h),freeContentConsumedCount:0,consumedContentIds:[],likedContentIds:[],savedContentIds:[],createdAt:(0,s.serverTimestamp)(),lastLogin:(0,s.serverTimestamp)(),updatedAt:(0,s.serverTimestamp)(),subscription:false})}console.log(`[API /api/waafi/callback] Waafi payment successful for user ${d}. ${f} coins added.`);return r.status(200).json({success:true,message:"Payment processed successfully."})}else{console.log(`[API /api/waafi/callback] Waafi payment not successful or status unknown for user ${d}. Status: ${t}`);return r.status(200).json({success:false,message:`Payment status: ${t||"unknown"}`})}}catch(e){console.error("[API /api/waafi/callback] Error processing Waafi callback:",e);return r.status(500).json({success:false,message:e.message||"Internal server error processing Waafi callback."})}}o()}catch(e){o(e)}})},44337:e=>{e.exports=import("firebase/firestore");},53328:(e,r,t)=>{t.a(e,async(e,o)=>{try{t.r(r);t.d(r,{config:()=>d,"default":()=>u,routeModule:()=>f});var s=t(33480);var a=t.n(s);var n=t(8667);var i=t(86435);var l=t(41641);var c=e([l]);l=(c.then?(await c)():c)[0];const u=(0,i.M)(l,"default");const d=(0,i.M)(l,"config");const f=new s.PagesAPIRouteModule({definition:{kind:n.A.PAGES_API,page:"/api/waafi/callback",pathname:"/api/waafi/callback",bundlePath:"",filename:""},userland:l});o()}catch(e){o(e)}})},63033:e=>{e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},66551:e=>{e.exports=import("firebase/app");},75600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},82015:e=>{e.exports=require("react")},86958:e=>{e.exports=import("firebase/auth");},89523:(e,r,t)=>{t.a(e,async(e,o)=>{try{t.d(r,{db:()=>A});var s=t(8732);var a=t.n(s);var n=t(66551);var i=t(86958);var l=t(44337);var c=t(82015);var u=t.n(c);var d=t(95594);var f=t(69222);var p=t.n(f);var g=e([n,i,l,d]);[n,i,l,d]=g.then?(await g)():g;const m={apiKey:"AIzaSyAl1iiyOrU49GOJdezPc-6zQPeonpJxl0I",authDomain:"wirenext-b4b65.firebaseapp.com",projectId:"wirenext-b4b65",storageBucket:"wirenext-b4b65.appspot.com",messagingSenderId:"486545175288",appId:"1:486545175288:web:6d53203232567ae786810d",measurementId:"G-9H1ZKBRWK0"};let h;let v;let A;if(!(0,n.getApps)().length){h=(0,n.initializeApp)(m)}else{h=(0,n.getApps)()[0]}v=(0,i.getAuth)(h);A=(0,l.getFirestore)(h);const P=null&&createContext(undefined);const C=()=>{const e=useContext(P);if(e===undefined){throw new Error("useAuthContext must be used within an AuthProvider")}return e};const w=({children:e})=>{const[r,t]=useState(null);const[o,s]=useState(null);const[a,n]=useState(true);const[i,l]=useState(true);const[c,u]=useState(null);const d=useRouter();const f=usePathname();const p=useCallback(async e=>{if(!e){s(null);l(false);console.log("[AuthProvider] fetchUserProfile: No current user, profile set to null.");return}console.log(`[AuthProvider] fetchUserProfile: Fetching profile for user ${e.uid}`);l(true);try{const r=doc(A,"users",e.uid);const t=await getDoc(r);if(t.exists()){s(t.data());console.log("[AuthProvider] fetchUserProfile: Profile fetched successfully.",t.data())}else{s(null);console.warn("[AuthProvider] fetchUserProfile: User document not found in Firestore after initialization attempt.")}}catch(e){console.error("[AuthProvider] fetchUserProfile: Error fetching user profile:",e);u(e);s(null)}finally{l(false);console.log("[AuthProvider] fetchUserProfile: Profile fetching complete.")}},[]);const g=useCallback(async()=>{const e=v.currentUser;console.log("[AuthProvider] refreshUserProfile called.");if(e){await p(e)}else{console.log("[AuthProvider] refreshUserProfile: No current user to refresh profile for.")}},[p]);useEffect(()=>{console.log("[AuthProvider] Setting up onAuthStateChanged listener.");const e=v.onAuthStateChanged(async e=>{console.log("[AuthProvider] onAuthStateChanged triggered. Current user:",e?.uid||"None");n(true);l(true);t(e);if(e){console.log("[AuthProvider] onAuthStateChanged: User detected. Initializing and fetching profile.");try{await initializeUserInFirestore(e);await p(e)}catch(e){console.error("[AuthProvider] onAuthStateChanged: Error during user processing:",e);u(e);s(null);l(false)}}else{console.log("[AuthProvider] onAuthStateChanged: No user. Clearing profile.");s(null);l(false)}n(false);console.log("[AuthProvider] onAuthStateChanged: Auth state processing complete. Loading:",false,"isUserProfileLoading:",i)},e=>{console.error("[AuthProvider] onAuthStateChanged: Listener error:",e);u(e);t(null);s(null);n(false);l(false)});return()=>{console.log("[AuthProvider] Cleaning up onAuthStateChanged listener.");e()}},[p]);useEffect(()=>{console.log(`[AuthProvider] Redirection check. Auth Loading: ${a}, Profile Loading: ${i}, User: ${r?.uid}, Path: ${f}`);if(a||i){console.log("[AuthProvider] Redirection check: Auth or profile still loading, waiting.");return}const e=f==="/auth/signin";const t=f==="/profile/setup";const s=f==="/profile/preferences";if(r){console.log("[AuthProvider] Redirection check: User is logged in.");if(e){console.log("[AuthProvider] User logged in and on sign-in page, redirecting to /");d.replace("/");return}if(o&&!o.profileComplete&&!t&&!s){console.log("[AuthProvider] User profile not complete, redirecting to /profile/setup");d.replace("/profile/setup");return}if(o&&o.profileComplete&&(!o.preferredCategories||o.preferredCategories.length===0)&&!s){console.log("[AuthProvider] User profile complete, but no preferences. Redirecting to /profile/preferences");d.replace("/profile/preferences");return}if(o&&o.profileComplete&&t){console.log("[AuthProvider] User on setup page, but profile complete. Redirecting based on preferences.");if(!o.preferredCategories||o.preferredCategories.length===0){d.replace("/profile/preferences")}else{d.replace("/")}return}if(o&&!o.profileComplete&&s){console.log("[AuthProvider] User on preferences page, but profile incomplete. Redirecting to /profile/setup.");d.replace("/profile/setup");return}if(o&&o.profileComplete&&o.preferredCategories&&o.preferredCategories.length>0&&s){console.log("[AuthProvider] User on preferences page, but preferences already set. Redirecting to /.");d.replace("/");return}}else{console.log("[AuthProvider] Redirection check: No user logged in.");if(!e){console.log(`[AuthProvider] No user, not on auth page (current: ${f}), redirecting to /auth/signin.`);d.replace("/auth/signin")}}},[r,o,a,i,d,f]);const m=async()=>{console.log("[AuthProvider] signInWithGoogle called.");u(null);try{const e=new GoogleAuthProvider;const r=await signInWithPopup(v,e);console.log("[AuthProvider] signInWithGoogle successful for user:",r.user?.uid);return r.user}catch(e){console.error("[AuthProvider] signInWithGoogle: Error:",e);u(e);throw e}};const h=async()=>{console.log("[AuthProvider] signOutUser called.");try{await signOut(v);console.log("[AuthProvider] signOutUser successful.")}catch(e){console.error("[AuthProvider] signOutUser: Error:",e);u(e);throw e}};const C={user:r,userProfile:o,signInWithGoogle:m,signOutUser:h,loading:a,isUserProfileLoading:i,error:c,firebaseAuth:v,refreshUserProfile:g};return _jsx(P.Provider,{value:C,children:e})};o()}catch(e){o(e)}})},95594:(e,r,t)=>{t.a(e,async(e,r)=>{try{var o=t(44337);var s=t(89523);var a=e([o,s]);[o,s]=a.then?(await a)():a;const n=async e=>{if(!e){console.error("[UserManagement] User not provided for initialization.");return}try{const r=doc(db,"users",e.uid);const t=await getDoc(r);if(!t.exists()){const t=e.displayName?.split(" ")||[];const o=t[0]||"";const s=t.slice(1).join(" ")||"";await setDoc(r,{uid:e.uid,name:e.displayName||`${o} ${s}`.trim(),email:e.email,photoURL:e.photoURL,firstName:o,lastName:s,country:"",mobile:"",profileComplete:false,preferredCategories:[],isAdmin:false,coins:0,freeContentConsumedCount:0,consumedContentIds:[],likedContentIds:[],savedContentIds:[],lastLogin:serverTimestamp(),createdAt:serverTimestamp(),updatedAt:serverTimestamp()});console.log("[UserManagement] User initialized in Firestore:",e.uid)}else{const o=t.data();const s={lastLogin:serverTimestamp(),updatedAt:serverTimestamp()};if(typeof o.profileComplete==="undefined")s.profileComplete=false;if(!o.preferredCategories)s.preferredCategories=[];if(typeof o.isAdmin==="undefined")s.isAdmin=false;if(typeof o.coins==="undefined")s.coins=0;if(typeof o.freeContentConsumedCount==="undefined")s.freeContentConsumedCount=0;if(!o.consumedContentIds)s.consumedContentIds=[];if(!o.likedContentIds)s.likedContentIds=[];if(!o.savedContentIds)s.savedContentIds=[];if(Object.keys(s).length>2){await updateDoc(r,s);console.log("[UserManagement] Existing user document updated with new fields:",e.uid,s)}else{await updateDoc(r,{lastLogin:serverTimestamp(),updatedAt:serverTimestamp()})}}}catch(e){console.error("[UserManagement] Error initializing/updating user:",e)}};r()}catch(e){r(e)}})}};var r=require("../../../webpack-api-runtime.js");r.C(e);var t=e=>r(r.s=e);var o=r.X(0,[609],()=>t(53328));module.exports=o})();